/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.58
 * Generated at: 2022-05-09 03:37:52 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.post;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class newsfeed_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/Users/user/talk_prj/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/spring_talk/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1649034360075L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3\" crossorigin=\"anonymous\">\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p\" crossorigin=\"anonymous\"></script>\n");
      out.write("\n");
      out.write("<style>\n");
      out.write(".title-padding{\n");
      out.write("    padding:10px;\n");
      out.write("}\n");
      out.write(".cardHeader {\n");
      out.write("    display: inline-block;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".card-menu {\n");
      out.write("    margin-left: 2px;\n");
      out.write("}\n");
      out.write(".card-body {\n");
      out.write("    padding: 0px;\n");
      out.write("}\n");
      out.write("details > summary {\n");
      out.write("    list-style: none;\n");
      out.write("    text-align: start;\n");
      out.write("}\n");
      out.write("  \n");
      out.write("details > summary::-webkit-details-marker {\n");
      out.write("    display: none;\n");
      out.write("}\n");
      out.write("summary > p {\n");
      out.write("    text-align: start;\n");
      out.write("}\n");
      out.write(".card {\n");
      out.write("    font-size: 12px;\n");
      out.write("}\n");
      out.write("</style>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>Insert title here</title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("<div class=\"container\">\n");
      out.write("\n");
      out.write("\n");
      out.write("<div class=\"post\">\n");
      out.write("\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<button id=\"more\" onclick=\"more()\">more</button>\n");
      out.write(" \n");
      out.write(" \n");
      out.write(" </div>\n");
      out.write("<!-- jquery cdn 코드 -->\n");
      out.write("	<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js\"></script>	\n");
      out.write("\n");
      out.write("	<script type=\"text/javascript\">\n");
      out.write("	\n");
      out.write("	/* 게시글 불러오는 로직 */\n");
      out.write("	let page_num = 0;\n");
      out.write("	var post = \"\";\n");
      out.write("\n");
      out.write("	 function more(){\n");
      out.write("		page_num += 1;\n");
      out.write("		$.getJSON(\"/post/newsfeed?page_num=\" + page_num, function(data){\n");
      out.write("\n");
      out.write("			console.log(data);\n");
      out.write("			\n");
      out.write("			$(data).each(\n");
      out.write("				function() {\n");
      out.write("					post += \"<p data-post_num='\" + this.post_num + \"' class='post'>\"\n");
      out.write("						+ \"<a href='/post/detail/\" + this.post_num + \"'> \"+ this.post_num +\"</a> | \" + this.writer + \" <br/> \" + this.title + \" <br/> \" + this.content\n");
      out.write("						+ \"</p>\";\n");
      out.write("\n");
      out.write("				});\n");
      out.write("			$(\".post\").html(post);			\n");
      out.write("		});\n");
      out.write("	 }\n");
      out.write("	 more();\n");
      out.write("	 \n");
      out.write("	 $(\"#replyAddBtn\").on(\"click\", function(){\n");
      out.write("			var reply_id = $(\"#newReplyWriter\").val();\n");
      out.write("			var reply_content = $(\"#newReplyText\").val();\n");
      out.write("			\n");
      out.write("			$.ajax({\n");
      out.write("				type : 'post',\n");
      out.write("				url : '/replies',\n");
      out.write("				headers : {\n");
      out.write("					\"Content-Type\" : \"application/json\",\n");
      out.write("					\"X-HTTP-Method-Override\" : \"POST\"\n");
      out.write("				},\n");
      out.write("				dataType : 'text',\n");
      out.write("				data : JSON.stringify({\n");
      out.write("					post_num : post_num,\n");
      out.write("					reply_id : reply_id,\n");
      out.write("					reply_content : reply_content\n");
      out.write("				}),\n");
      out.write("				success : function(result){\n");
      out.write("					if(result == 'OK'){\n");
      out.write("						alert(\"등록되었습니다.\");\n");
      out.write("						getAllList();\n");
      out.write("						refresh();\n");
      out.write("					}\n");
      out.write("				}\n");
      out.write("				/* error도 설정 가능 */\n");
      out.write("			});\n");
      out.write("			\n");
      out.write("		});\n");
      out.write("	 </script>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
